/*
 * GeoJSON geometry
 * An example of swagger file for a geographic API. It contains the geometry definitions
 *
 * OpenAPI spec version: 1.0.0
 * Contact: daniele.andreis@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Geometry;
import io.swagger.client.model.Point2D;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * GeoJSon geometry
 */
@ApiModel(description = "GeoJSon geometry")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-16T10:51:27.582-07:00")
public class MultiPolygon extends Geometry {

  public MultiPolygon() {
    setType(TypeEnum.MULTIPOLYGON);
  }

  @SerializedName("coordinates")
  private List<List<List<Point2D>>> coordinates = null;


  public MultiPolygon coordinates(List<List<List<Point2D>>> coordinates) {
    this.coordinates = coordinates;
    return this;
  }

  public MultiPolygon addCoordinatesItem(List<List<Point2D>> coordinatesItem) {
    if (this.coordinates == null) {
      this.coordinates = new ArrayList<List<List<Point2D>>>();
    }
    this.coordinates.add(coordinatesItem);
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/
  @ApiModelProperty(value = "")
  public List<List<List<Point2D>>> getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(List<List<List<Point2D>>> coordinates) {
    this.coordinates = coordinates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiPolygon multiPolygon = (MultiPolygon) o;
    return Objects.equals(this.coordinates, multiPolygon.coordinates) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordinates, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiPolygon {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

